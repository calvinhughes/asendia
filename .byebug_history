c
exit
c
parsed_response["Fault"] && parsed_response["Fault"]["faultcode"]
parsed_response["Fault"] && parsed_response["Fault"] 
parsed_response["Fault"]
parsed_response["FaultCode"]
parsed_response
c
exit
response.parsed_response["Envelope"]["Body"]
parsed_response
c
self.response_object
self.response_object["Envelope"]
self.response_object["Envelope"]["Body"]
self.response_object
c
response
self.response
c
self.response
response
self
response
c
self
@response
response
c
true unless response_object["Fault"] && response_object["Fault"]["faultcode"] == "s:AuthenticationError"
response_object["Fault"] && response_object["Fault"]["faultcode"] == "s:AuthenticationError"
response_object["Fault"]
response_object
response_objbect
c
response_object["Fault"].empty?
c
response_object["Fault"]["faultcode"]
response_object["Fault"]
response_object
c
response_object["Envelope"]["Body"]
response_object["Envelope"]
response_object["Evelope"]
response_object
c
self.response
action
c
action
self.response
response
c
response.response["ExitStatus"]["StatusDetails"].values.first["Message"]
response.response["ExitStatus"]["StatusDetails"].values["Message"]
response.response["ExitStatus"]["StatusDetails"].values
response.response["ExitStatus"]["StatusDetails"]
response.response["ExitStatus"]["StatusDetails"].first
response.response["ExitStatus"]["StatusDetails"]
response.response["ExitStatus"]["StatusDetails"]["Message"]
response.response["ExitStatus"]["StatusDetails"].first
response.response["ExitStatus"]["StatusDetails"]["Message"]
response.response["ExitStatus"]["StatusDetails"]
response.response["ExitStatus"]
response.reponse["ExitStatus"]
response["ExitStatus"]
response
c
subject
exit
incorrect_data
c
exit
reader.page(1).text
reader.page(1).text.reverse
reader.page(1).io
reader.page(1).text
reader.page(1)
reader.pages(1)
reader.pages
reader.[ages
reader
c
response["OutputParameters"].values.first
response["OutputParameters"].values
response["OutputParameters"].class.values
response["OutputParameters"].class
response["OutputParameters"].second
response["OutputParameters"].flatten.first
c
response["OutputParameters"].flatten.first
response["OutputParameters"].first.firstc
response["OutputParameters"].first.find {|node| node["Name"] == "Shipment.Status" }
response["OutputParameters"].first
response["OutputParameters"].class
response["OutputParameters"]
response["OutputParameters"].first
response["OutputParameters"]
c
response.first
response.firs
c
response
c
request
c
response
c
response.parsed_response["Envelope"]["Body"]["#{action}Response"]
action
c
#c
c
request
c
request
exit
puts request_xml
request_xml
body
request
exit
request.body_method
request
exit
puts subject
exit
puts subject
exit
puts subject
subject
pp subject
ap subject
subject
exit
subject
exit
c
property
c
property
c
property
c
property
c
property
c
property
exit
template_data.keys
template_data/keys
exit
c
exit
c
exit
name
self
reference_number
nodes
template_data
template_data[:shipment]
exit
template_data[:shipment]
self
attributes
reference_number
reference_nunmber
c
self
name
exit
c
return true
args
name
exit
block
args
name
exit
c
exit
c
node[:value][0...node[:length]]
node[:value][0...node[:length]
node
c
template_data.reference_number
template_data
c
exit
class Test < Hashie::Mash
template_data_binding.
template_data_binding.class
template_data_binding
binding.template
binding.render
binding.methods
binding
c
reference_number
Hashie::Mash.new(template_data).send(:binding)
exit
template_data.send :binding
template_data.binding
template_data
c
template
c
template
c
template
exit
template
exit
File.open(logo_path).read
File.open(logo_path)
logo_path = File.join( File.dirname(__FILE__), 'lib/ascendia/builder/templates/_shipment.xml.erb')
File.open(logo_path)
logo_path = File.join( File.dirname(__FILE__), '../lib/ascendia/builder/templates/_shipment.xml.erb')
logo_path = File.join( File.dirname(__FILE__), '../logo.txt' )
File.open(File.join( File.dirname(__FILE__), 'ascendia/builder/templates/_shipment.xml.erb'))
File.join( File.dirname(__FILE__), 'ascendia/builder/templates/_shipment.xml.erb')
File.join( File.dirname(__FILE__), 'ascendia')
File.join( File.dirname(__FILE__), 'README')
$LOAD_PATH
File.open("./templates/_shipment.xml.erb")
__dir__
File.open("templates/_shipment.xml.erb")
File.open("../templates/_shipment.xml.erb")
File.open("templates/_shipment.xml.erb")
File.open(File.join(File.dirname(__FILE__), "../templates/_shipment.xml.erb"))File
File.join(File.dirname(__FILE__), "../assets/bar.txt")
__dir__
File.dirname(__FILE__)
__FILE__
template
exit
template
exit
Dir.pwd
template
exit
template
c
Ascendia::Builder::Shipment
exit
Ascendia::Builder::Shipment
exit
class Test end;
module Ascendia;end
module Ascendia
exit
